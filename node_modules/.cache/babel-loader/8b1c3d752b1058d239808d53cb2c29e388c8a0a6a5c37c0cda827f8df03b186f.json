{"ast":null,"code":"var _jsxFileName = \"/Users/mandylin/Documents/GitHub/smt/src/components/search.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport styled from \"styled-components\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = styled.input`\n  width: 90%;\n  padding: 10px 20px;\n  box-sizing: border-box;\n  border: solid var(--white) 1px;\n  background: none;\n  color: var(--white);\n  outline: none;\n  z-index: 5;\n  &::placeholder {\n    color: var(--white);\n  }\n`;\n_c = SearchBar;\nconst Button = styled.button`\n  width: 50px;\n  background-color: transparent;\n  border: none;\n  color: var(--white);\n`;\n_c2 = Button;\nconst Div = styled.div`\n  display: flex;\n`;\n_c3 = Div;\nconst CsvReader = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchCriteria, setSearchCriteria] = useState({\n    searchInput: \"\",\n    playerLastName: \"\",\n    playerId: \"\",\n    position: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: results => {\n            const filteredResults = results.data.map(row => {\n              delete row[\"\"];\n              return row;\n            });\n            setData(results.data);\n            setFilteredData(results.data); // Initialize filtered data\n            setError(null);\n          },\n          error: err => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          }\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleInputChange = event => {\n    setSearchCriteria({\n      ...searchCriteria,\n      searchInput: event.target.value\n    });\n  };\n  const handleSearch = searchQuery => {\n    if (!searchQuery) {\n      // If no input is provided, return the original data\n      setFilteredData(data);\n      return;\n    }\n    const filtered = data.filter(row => {\n      return row.first_name.toLowerCase().includes(searchQuery) || row.last_name.toLowerCase().includes(searchQuery) || row.player_id.toLowerCase().includes(searchQuery) || row.level.toLowerCase().includes(searchQuery) || row.primary_position.toLowerCase().includes(searchQuery) || Array.isArray(row.secondary_position) && row.secondary_position.some(position => position.toLowerCase().includes(searchQuery));\n    });\n    setFilteredData(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        placeholder: \"Search name, id, and positions.\",\n        value: searchCriteria.searchInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleSearch(searchCriteria.searchInput),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), filteredData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(filteredData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvReader, \"wEIKAC9UR1I9DJ1WmOPbaTpSOAY=\");\n_c4 = CsvReader;\nexport default CsvReader;\n\n/*<SearchBar\nplaceholder=\"Search player name, id, or position and press enter\"\nonChange={handleSearchInputChange}\nonKeyDown={handleSearchInput}\n></SearchBar>\n<SearchResult search={searchInput}></SearchResult>*/\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Div\");\n$RefreshReg$(_c4, \"CsvReader\");","map":{"version":3,"names":["React","useEffect","useState","Papa","styled","jsxDEV","_jsxDEV","SearchBar","input","_c","Button","button","_c2","Div","div","_c3","CsvReader","_s","data","setData","filteredData","setFilteredData","error","setError","searchCriteria","setSearchCriteria","searchInput","playerLastName","playerId","position","fetchData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","parse","header","complete","results","filteredResults","map","row","err","console","handleInputChange","event","target","handleSearch","searchQuery","filtered","filter","first_name","toLowerCase","includes","last_name","player_id","level","primary_position","Array","isArray","secondary_position","some","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","message","length","JSON","stringify","_c4","$RefreshReg$"],"sources":["/Users/mandylin/Documents/GitHub/smt/src/components/search.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport styled from \"styled-components\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst SearchBar = styled.input`\n  width: 90%;\n  padding: 10px 20px;\n  box-sizing: border-box;\n  border: solid var(--white) 1px;\n  background: none;\n  color: var(--white);\n  outline: none;\n  z-index: 5;\n  &::placeholder {\n    color: var(--white);\n  }\n`;\nconst Button = styled.button`\n  width: 50px;\n  background-color: transparent;\n  border: none;\n  color: var(--white);\n`;\nconst Div = styled.div`\n  display: flex;\n`;\n\nconst CsvReader = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchCriteria, setSearchCriteria] = useState({\n    searchInput: \"\",\n    playerLastName: \"\",\n    playerId: \"\",\n    position: \"\",\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: (results) => {\n            const filteredResults = results.data.map((row) => {\n              delete row[\"\"];\n              return row;\n            });\n            setData(results.data);\n            setFilteredData(results.data); // Initialize filtered data\n            setError(null);\n          },\n          error: (err) => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          },\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleInputChange = (event) => {\n    setSearchCriteria({ ...searchCriteria, searchInput: event.target.value });\n  };\n\n  const handleSearch = (searchQuery) => {\n    if (!searchQuery) {\n      // If no input is provided, return the original data\n      setFilteredData(data);\n      return;\n    }\n    const filtered = data.filter((row) => {\n      return (\n        row.first_name.toLowerCase().includes(searchQuery) ||\n        row.last_name.toLowerCase().includes(searchQuery) ||\n        row.player_id.toLowerCase().includes(searchQuery) ||\n        row.level.toLowerCase().includes(searchQuery) ||\n        row.primary_position.toLowerCase().includes(searchQuery) ||\n        (Array.isArray(row.secondary_position) &&\n          row.secondary_position.some((position) =>\n            position.toLowerCase().includes(searchQuery)\n          ))\n      );\n    });\n    setFilteredData(filtered);\n  };\n\n  return (\n    <div>\n      <Div>\n        <SearchBar\n          placeholder=\"Search name, id, and positions.\"\n          value={searchCriteria.searchInput}\n          onChange={handleInputChange}\n        ></SearchBar>\n        <Button onClick={() => handleSearch(searchCriteria.searchInput)}>\n          <i class=\"fa fa-search\"></i>\n        </Button>\n      </Div>\n\n      {error && <div>Error: {error.message}</div>}\n      {filteredData.length > 0 && (\n        <div>\n          <h2>Search Results</h2>\n          <pre>{JSON.stringify(filteredData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CsvReader;\n\n/*<SearchBar\nplaceholder=\"Search player name, id, or position and press enter\"\nonChange={handleSearchInputChange}\nonKeyDown={handleSearchInput}\n></SearchBar>\n<SearchResult search={searchInput}></SearchResult>*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}