{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nconst CsvReader = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchCriteria, setSearchCriteria] = useState({\n    playerFirstName: \"\",\n    playerLastName: \"\",\n    playerId: \"\",\n    position: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: results => {\n            const filteredResults = results.data.map(row => {\n              delete row[\"\"];\n              return row;\n            });\n            setData(results.data);\n            setFilteredData(results.data); // Initialize filtered data\n            setError(null);\n          },\n          error: err => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          }\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSearchCriteria({\n      ...searchCriteria,\n      [name]: value\n    });\n  };\n  const handleSearch = (playerFirstName, playerLastName, playerId, position) => {\n    const filtered = data.filter(row => {\n      return (playerFirstName ? row.first_name === playerFirstName : true) && (playerLastName ? row.last_name === playerLastName : true) && (playerId ? row.player_id === playerId : true) && (position ? row.primary_position === position || row.secondary_position.includes(position) : true);\n    });\n    setFilteredData(filtered);\n  };\n  return filteredData;\n};\n_s(CsvReader, \"9eUujB1OpcXMuZuqTa0xT3odh0c=\");\n_c = CsvReader;\nexport default CsvReader;\nvar _c;\n$RefreshReg$(_c, \"CsvReader\");","map":{"version":3,"names":["React","useEffect","useState","Papa","CsvReader","_s","data","setData","filteredData","setFilteredData","error","setError","searchCriteria","setSearchCriteria","playerFirstName","playerLastName","playerId","position","fetchData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","parse","header","complete","results","filteredResults","map","row","err","console","handleInputChange","event","name","target","handleSearch","filtered","filter","first_name","last_name","player_id","primary_position","secondary_position","includes","_c","$RefreshReg$"],"sources":["/Users/mandylin/Documents/GitHub/smt/src/functions/search.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\n\nconst CsvReader = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchCriteria, setSearchCriteria] = useState({\n    playerFirstName: \"\",\n    playerLastName: \"\",\n    playerId: \"\",\n    position: \"\",\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: (results) => {\n            const filteredResults = results.data.map((row) => {\n              delete row[\"\"];\n              return row;\n            });\n            setData(results.data);\n            setFilteredData(results.data); // Initialize filtered data\n            setError(null);\n          },\n          error: (err) => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          },\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setSearchCriteria({ ...searchCriteria, [name]: value });\n  };\n\n  const handleSearch = (\n    playerFirstName,\n    playerLastName,\n    playerId,\n    position\n  ) => {\n    const filtered = data.filter((row) => {\n      return (\n        (playerFirstName ? row.first_name === playerFirstName : true) &&\n        (playerLastName ? row.last_name === playerLastName : true) &&\n        (playerId ? row.player_id === playerId : true) &&\n        (position\n          ? row.primary_position === position ||\n            row.secondary_position.includes(position)\n          : true)\n      );\n    });\n    setFilteredData(filtered);\n  };\n\n  return filteredData;\n};\n\nexport default CsvReader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}