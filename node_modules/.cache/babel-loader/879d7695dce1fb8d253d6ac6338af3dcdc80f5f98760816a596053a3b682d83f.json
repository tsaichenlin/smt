{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport Papa from \"papaparse\";\nimport { GlobalContext } from \"../GlobalContext\";\nexport const useRVv = playerPosition => {\n  _s();\n  const {\n    globalPlayers\n  } = useContext(GlobalContext);\n  const [data, setData] = useState([]);\n  const [playerData, setPlayerData] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    isSimulating,\n    setIsSimulating\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database_all.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: results => {\n            setData(results.data);\n            setError(null);\n          },\n          error: err => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          }\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    var _globalPlayers$player;\n    console.log(\"getting data\");\n    if (data.length > 0 && (_globalPlayers$player = globalPlayers[playerPosition]) !== null && _globalPlayers$player !== void 0 && _globalPlayers$player.id) {\n      const playerId = globalPlayers[playerPosition].id;\n      const playerRow = data.find(row => row.player_id == playerId);\n      console.log(playerId);\n      console.log(playerRow);\n      if (playerRow) {\n        setPlayerData(playerRow);\n      } else {\n        setPlayerData(null);\n      }\n    } else {\n      setPlayerData(null);\n    }\n  }, [globalPlayers]);\n  return {\n    playerData,\n    error\n  };\n};\n_s(useRVv, \"+2v32UFmHwCxXBD+m1UcYUMFx9M=\");","map":{"version":3,"names":["useEffect","useState","useContext","Papa","GlobalContext","useRVv","playerPosition","_s","globalPlayers","data","setData","playerData","setPlayerData","error","setError","isSimulating","setIsSimulating","fetchData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","parse","header","complete","results","err","console","_globalPlayers$player","log","length","id","playerId","playerRow","find","row","player_id"],"sources":["/Users/mandylin/Documents/GitHub/smt/src/components/FetchData.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport Papa from \"papaparse\";\nimport { GlobalContext } from \"../GlobalContext\";\n\nexport const useRVv = (playerPosition) => {\n  const { globalPlayers } = useContext(GlobalContext);\n  const [data, setData] = useState([]);\n  const [playerData, setPlayerData] = useState(null);\n  const [error, setError] = useState(null);\n  const { isSimulating, setIsSimulating } = useContext(GlobalContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/database/player_database_all.csv\");\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = decoder.decode(result.value);\n        Papa.parse(csv, {\n          header: true,\n          complete: (results) => {\n            setData(results.data);\n            setError(null);\n          },\n          error: (err) => {\n            console.error(\"Error parsing CSV:\", err);\n            setError(err);\n          },\n        });\n      } catch (err) {\n        console.error(\"Error fetching CSV:\", err);\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"getting data\");\n    if (data.length > 0 && globalPlayers[playerPosition]?.id) {\n      const playerId = globalPlayers[playerPosition].id;\n      const playerRow = data.find((row) => row.player_id == playerId);\n      console.log(playerId);\n      console.log(playerRow);\n      if (playerRow) {\n        setPlayerData(playerRow);\n      } else {\n        setPlayerData(null);\n      }\n    } else {\n      setPlayerData(null);\n    }\n  }, [globalPlayers]);\n\n  return { playerData, error };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,MAAMC,MAAM,GAAIC,cAAc,IAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAc,CAAC,GAAGN,UAAU,CAACE,aAAa,CAAC;EACnD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEc,YAAY;IAAEC;EAAgB,CAAC,GAAGd,UAAU,CAACE,aAAa,CAAC;EAEnEJ,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAC,CAAC;QACxC,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;QACxC,MAAMC,GAAG,GAAGF,OAAO,CAACG,MAAM,CAACL,MAAM,CAACM,KAAK,CAAC;QACxC1B,IAAI,CAAC2B,KAAK,CAACH,GAAG,EAAE;UACdI,MAAM,EAAE,IAAI;UACZC,QAAQ,EAAGC,OAAO,IAAK;YACrBvB,OAAO,CAACuB,OAAO,CAACxB,IAAI,CAAC;YACrBK,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC;UACDD,KAAK,EAAGqB,GAAG,IAAK;YACdC,OAAO,CAACtB,KAAK,CAAC,oBAAoB,EAAEqB,GAAG,CAAC;YACxCpB,QAAQ,CAACoB,GAAG,CAAC;UACf;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZC,OAAO,CAACtB,KAAK,CAAC,qBAAqB,EAAEqB,GAAG,CAAC;QACzCpB,QAAQ,CAACoB,GAAG,CAAC;MACf;IACF,CAAC;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IAAA,IAAAoC,qBAAA;IACdD,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC;IAC3B,IAAI5B,IAAI,CAAC6B,MAAM,GAAG,CAAC,KAAAF,qBAAA,GAAI5B,aAAa,CAACF,cAAc,CAAC,cAAA8B,qBAAA,eAA7BA,qBAAA,CAA+BG,EAAE,EAAE;MACxD,MAAMC,QAAQ,GAAGhC,aAAa,CAACF,cAAc,CAAC,CAACiC,EAAE;MACjD,MAAME,SAAS,GAAGhC,IAAI,CAACiC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,SAAS,IAAIJ,QAAQ,CAAC;MAC/DL,OAAO,CAACE,GAAG,CAACG,QAAQ,CAAC;MACrBL,OAAO,CAACE,GAAG,CAACI,SAAS,CAAC;MACtB,IAAIA,SAAS,EAAE;QACb7B,aAAa,CAAC6B,SAAS,CAAC;MAC1B,CAAC,MAAM;QACL7B,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,OAAO;IAAEG,UAAU;IAAEE;EAAM,CAAC;AAC9B,CAAC;AAACN,EAAA,CArDWF,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}